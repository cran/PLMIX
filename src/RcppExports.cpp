// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// chisqmeasureobs
double chisqmeasureobs(Rcpp::IntegerMatrix pi_inv, Rcpp::NumericMatrix p, Rcpp::NumericVector weights);
RcppExport SEXP PLMIX_chisqmeasureobs(SEXP pi_invSEXP, SEXP pSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasureobs(pi_inv, p, weights));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasureobs1dim
double chisqmeasureobs1dim(Rcpp::IntegerMatrix pi_inv, Rcpp::NumericMatrix p, Rcpp::NumericVector weights);
RcppExport SEXP PLMIX_chisqmeasureobs1dim(SEXP pi_invSEXP, SEXP pSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasureobs1dim(pi_inv, p, weights));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasureobscond
double chisqmeasureobscond(Rcpp::IntegerMatrix pi_inv, Rcpp::NumericMatrix p, Rcpp::NumericVector weights);
RcppExport SEXP PLMIX_chisqmeasureobscond(SEXP pi_invSEXP, SEXP pSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasureobscond(pi_inv, p, weights));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasureobsmatrix1dim
Rcpp::NumericMatrix chisqmeasureobsmatrix1dim(Rcpp::IntegerMatrix pi_inv, Rcpp::NumericMatrix p, Rcpp::NumericVector weights);
RcppExport SEXP PLMIX_chisqmeasureobsmatrix1dim(SEXP pi_invSEXP, SEXP pSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasureobsmatrix1dim(pi_inv, p, weights));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasuretheo
double chisqmeasuretheo(int N, Rcpp::NumericMatrix ref_order, Rcpp::NumericMatrix p, Rcpp::NumericVector weights, Rcpp::IntegerMatrix pi_inv_obs);
RcppExport SEXP PLMIX_chisqmeasuretheo(SEXP NSEXP, SEXP ref_orderSEXP, SEXP pSEXP, SEXP weightsSEXP, SEXP pi_inv_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv_obs(pi_inv_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasuretheo(N, ref_order, p, weights, pi_inv_obs));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasuretheo1dim
double chisqmeasuretheo1dim(int N, Rcpp::NumericMatrix ref_order, Rcpp::NumericMatrix p, Rcpp::NumericVector weights, Rcpp::IntegerMatrix pi_inv_obs);
RcppExport SEXP PLMIX_chisqmeasuretheo1dim(SEXP NSEXP, SEXP ref_orderSEXP, SEXP pSEXP, SEXP weightsSEXP, SEXP pi_inv_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv_obs(pi_inv_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasuretheo1dim(N, ref_order, p, weights, pi_inv_obs));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasuretheocond
double chisqmeasuretheocond(int N, Rcpp::NumericMatrix ref_order, Rcpp::NumericMatrix p, Rcpp::NumericVector weights, Rcpp::IntegerMatrix pi_inv_obs);
RcppExport SEXP PLMIX_chisqmeasuretheocond(SEXP NSEXP, SEXP ref_orderSEXP, SEXP pSEXP, SEXP weightsSEXP, SEXP pi_inv_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv_obs(pi_inv_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasuretheocond(N, ref_order, p, weights, pi_inv_obs));
    return rcpp_result_gen;
END_RCPP
}
// chisqmeasuretheomatrix1dim
Rcpp::NumericMatrix chisqmeasuretheomatrix1dim(int N, Rcpp::NumericMatrix ref_order, Rcpp::NumericMatrix p, Rcpp::NumericVector weights, Rcpp::IntegerMatrix pi_inv_obs);
RcppExport SEXP PLMIX_chisqmeasuretheomatrix1dim(SEXP NSEXP, SEXP ref_orderSEXP, SEXP pSEXP, SEXP weightsSEXP, SEXP pi_inv_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv_obs(pi_inv_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisqmeasuretheomatrix1dim(N, ref_order, p, weights, pi_inv_obs));
    return rcpp_result_gen;
END_RCPP
}
// CompProbZpartial
NumericMatrix CompProbZpartial(NumericMatrix p, NumericMatrix pi_inv, NumericMatrix Y, NumericMatrix u_bin, IntegerVector n_rank, NumericVector omega);
RcppExport SEXP PLMIX_CompProbZpartial(SEXP pSEXP, SEXP pi_invSEXP, SEXP YSEXP, SEXP u_binSEXP, SEXP n_rankSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type u_bin(u_binSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_rank(n_rankSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(CompProbZpartial(p, pi_inv, Y, u_bin, n_rank, omega));
    return rcpp_result_gen;
END_RCPP
}
// CompRateP
NumericMatrix CompRateP(NumericMatrix pi_inv, NumericMatrix Y, NumericMatrix z, NumericMatrix u_bin, IntegerVector n_rank, NumericVector rate0);
RcppExport SEXP PLMIX_CompRateP(SEXP pi_invSEXP, SEXP YSEXP, SEXP zSEXP, SEXP u_binSEXP, SEXP n_rankSEXP, SEXP rate0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type u_bin(u_binSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_rank(n_rankSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate0(rate0SEXP);
    rcpp_result_gen = Rcpp::wrap(CompRateP(pi_inv, Y, z, u_bin, n_rank, rate0));
    return rcpp_result_gen;
END_RCPP
}
// CompRateYpartial
NumericMatrix CompRateYpartial(NumericMatrix p, NumericMatrix pi_inv, NumericVector ref_order, NumericMatrix z, NumericVector n_rank);
RcppExport SEXP PLMIX_CompRateYpartial(SEXP pSEXP, SEXP pi_invSEXP, SEXP ref_orderSEXP, SEXP zSEXP, SEXP n_rankSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_rank(n_rankSEXP);
    rcpp_result_gen = Rcpp::wrap(CompRateYpartial(p, pi_inv, ref_order, z, n_rank));
    return rcpp_result_gen;
END_RCPP
}
// Estep
NumericMatrix Estep(NumericMatrix p, NumericMatrix ref_order, NumericVector weights, NumericMatrix pi_inv);
RcppExport SEXP PLMIX_Estep(SEXP pSEXP, SEXP ref_orderSEXP, SEXP weightsSEXP, SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(Estep(p, ref_order, weights, pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// howmanyranked
IntegerVector howmanyranked(NumericMatrix pi_inv);
RcppExport SEXP PLMIX_howmanyranked(SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(howmanyranked(pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// loglikPLMIX
double loglikPLMIX(NumericMatrix p, NumericMatrix ref_order, NumericVector weights, NumericMatrix pi_inv);
RcppExport SEXP PLMIX_loglikPLMIX(SEXP pSEXP, SEXP ref_orderSEXP, SEXP weightsSEXP, SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikPLMIX(p, ref_order, weights, pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// PLMIXsim
Rcpp::IntegerMatrix PLMIXsim(int N, int K, int G, Rcpp::NumericMatrix p, Rcpp::NumericMatrix ref_order, Rcpp::NumericVector weights, bool rankingFormat, Rcpp::IntegerMatrix pi_inv);
RcppExport SEXP PLMIX_PLMIXsim(SEXP NSEXP, SEXP KSEXP, SEXP GSEXP, SEXP pSEXP, SEXP ref_orderSEXP, SEXP weightsSEXP, SEXP rankingFormatSEXP, SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type rankingFormat(rankingFormatSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(PLMIXsim(N, K, G, p, ref_order, weights, rankingFormat, pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// quickintsample
Rcpp::IntegerVector quickintsample(int n, int size, Rcpp::NumericVector prob);
RcppExport SEXP PLMIX_quickintsample(SEXP nSEXP, SEXP sizeSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(quickintsample(n, size, prob));
    return rcpp_result_gen;
END_RCPP
}
// SimYpsilon
NumericMatrix SimYpsilon(NumericMatrix rate, NumericVector n_rank);
RcppExport SEXP PLMIX_SimYpsilon(SEXP rateSEXP, SEXP n_rankSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_rank(n_rankSEXP);
    rcpp_result_gen = Rcpp::wrap(SimYpsilon(rate, n_rank));
    return rcpp_result_gen;
END_RCPP
}
// tau
Rcpp::IntegerMatrix tau(Rcpp::IntegerMatrix pi_inv);
RcppExport SEXP PLMIX_tau(SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(tau(pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// top1freq1dim
Rcpp::IntegerMatrix top1freq1dim(Rcpp::IntegerMatrix pi_inv);
RcppExport SEXP PLMIX_top1freq1dim(SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(top1freq1dim(pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// umat
NumericMatrix umat(NumericMatrix pi_inv);
RcppExport SEXP PLMIX_umat(SEXP pi_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    rcpp_result_gen = Rcpp::wrap(umat(pi_inv));
    return rcpp_result_gen;
END_RCPP
}
// UpPhetpartial
NumericMatrix UpPhetpartial(NumericMatrix p, NumericMatrix ref_order, NumericMatrix pi_inv, NumericMatrix u_bin, NumericMatrix z_hat, NumericMatrix shape0, NumericVector rate0, IntegerVector n_rank);
RcppExport SEXP PLMIX_UpPhetpartial(SEXP pSEXP, SEXP ref_orderSEXP, SEXP pi_invSEXP, SEXP u_binSEXP, SEXP z_hatSEXP, SEXP shape0SEXP, SEXP rate0SEXP, SEXP n_rankSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ref_order(ref_orderSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pi_inv(pi_invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type u_bin(u_binSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z_hat(z_hatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type shape0(shape0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate0(rate0SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_rank(n_rankSEXP);
    rcpp_result_gen = Rcpp::wrap(UpPhetpartial(p, ref_order, pi_inv, u_bin, z_hat, shape0, rate0, n_rank));
    return rcpp_result_gen;
END_RCPP
}
// UpWhet
NumericVector UpWhet(NumericMatrix z_hat, NumericVector alpha0);
RcppExport SEXP PLMIX_UpWhet(SEXP z_hatSEXP, SEXP alpha0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z_hat(z_hatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha0(alpha0SEXP);
    rcpp_result_gen = Rcpp::wrap(UpWhet(z_hat, alpha0));
    return rcpp_result_gen;
END_RCPP
}
